---
- hosts: default
  become: true
  remote_user: ubuntu
  vars:
    nomad_version: 1.3.1
    ansible_python_interpreter: /usr/bin/python3
    vault_addr:
    ansible_user_password:
    ansible_public_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8xYZMmdFegfk4NCog1casM50GMQOzunGt1gjO0TNLPI4aJvfwL3BDyEMmvzvkyLKlAxhuQ9nPjYW5X6BK1kihHIBgpz3lweaXJWE0ITJEGjLpniSBvvXsQQA/Dq7wIc/l383aEaiqYDzmUhcndBkCPcHPd7WyGTQJl76Oh+ot0gabQzy/qfXdZNCnAIyCrVV9ZVlZmvEVcPLWq2wtP3y/9m027GVTh01KxaZjVHvT5gvjsniN3ZI908HsSTTwHXykXQQCTIOTfKPVvpr3lSiFomzGKVLQU8bkRz86ICn5UlXUNlzgNQbRA/JBM2W+o8XbzYhyoL+srQ7upPuWkcRrYYNnCk6Ag9fnUXTFAjOJdKZdhrxF2AuM/uEp+M0JwSwsCgilnm5nztZfRf9QHgKuYAvelu4325TtazIPXUiwXAsIKCl0UyWI5YTRu3lO8P3fpG0HyMIG1y0MukTMUEP13kp3sqjif374JIKdThksjEetIYw2H9DU5WEVVXrHXUs= burkey@erebor.local
    ansible_public_key2: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8rqxon4hRyV5cLNZczuJTe8dsZ33hpWHDU993r4iiY3t9bXqfmIHlIZ7dTL93nlvsgzVdOYMVGMOHMg/a1ZK0VRoKTS5BBhBGJejjDUfWRAtedZbM9JE5HHpks+L+nf8cOM14Os+Q3BV+z4MjYfIK5ZbV0IvUaY0kscQcE8cZoOTC2hHu/MPDneKJxG+HRQJfvqvnWz69/EXyi9iqtmOn0Xy9905qtbPNlDs1c4qF+zZ1qQCkMYP0Z4AVvLaPEJZlPmDnGqz5s1vVb130aXe1A11eq4RwgvZRxXW8i88pKqCGPuLRh7anqvSI15SLpA2KWvu7wD5CvhTisc/6TfVf grant@grantorchard.com
  tasks:
  #   - name: Assign the CIS banchmark role
  #     include_role:
  #      name: ubuntu-18.04-cis-benchmark-for-ansible
    # - name: Update SSH configuration
    #   include_role:
    #       name: ansible-linux-ssh
    - name: Create Ansible user
      user:
        name: ansible
        password: '{{ ansible_user_password | password_hash("sha512") }}'
        state: present
        shell: /bin/bash
      become: yes
      become_method: sudo
    - name: Assign sudo permissions to ansible user
      copy:
        content: 'ansible ALL=(ALL:ALL) ALL'
        dest: /etc/sudoers.d/ansible
        mode: 644

    - name: Upgrade installed packages
      apt:
        upgrade: dist
        update_cache: yes
    
    - name: Install unzip
      apt:
        update_cache: yes
        name: unzip
        state: latest
    
    - name: Create nomad Group
      group:
        name: nomad
        state: present

    - name: Create nomad User
      user:
        name: nomad
        state: present

    - name: Download nomad Binary
      get_url:
        url: https://releases.hashicorp.com/nomad/{{ nomad_version }}+ent/nomad_{{ nomad_version }}+ent_linux_amd64.zip
        dest: ./nomad.zip
        checksum: sha256:https://releases.hashicorp.com/nomad/{{ nomad_version }}+ent/nomad_{{ nomad_version }}+ent_SHA256SUMS

    - name: Unpack nomad Binary
      unarchive:
        remote_src: yes
        src: ./nomad.zip
        dest: /usr/local/bin/

    - name: Set nomad Binary Owner
      file:
        path: /usr/local/bin/nomad
        owner: nomad
        group: nomad
        mode: +x

    - name: Copy nomad systemd
      copy:
        src: ./nomad/nomad.service
        dest: /etc/systemd/system/nomad.service
        owner: root
        group: root
        mode: '0644'

    - name: Make Nomad Raft Data Directory
      file:
        path: /opt/nomad/data
        state: directory
        owner: nomad
        group: nomad
    
    - name: Make Nomad Configuration Directory
      file:
        path: /etc/nomad.d
        state: directory
        owner: nomad
        group: nomad

    - name: Copy nomad license
      copy:
        src: ./nomad/license.hclic
        dest: /etc/nomad.d/license.hclic
        owner: root
        group: root
        mode: '0644'

    - name: Bounce Nomad Service
      systemd:
        name: nomad
        state: restarted

    #Docker for Nomad Nodes
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    # - name: Add Nvidia GPGP apt key
    #   apt_key:
    #     url: https://nvidia.github.io/nvidia-container-runtime/gpgkey
    #     state: present 

    # - name: Update apt and install nvidia
    #   apt: update_cache=yes name=nvidia-container-runtime state=latest


#           curl -s -L https://nvidia.github.io/nvidia-container-runtime/gpgkey | \
#   sudo apt-key add -
# distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
# curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.list | \
#   sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
# sudo apt-get update
      